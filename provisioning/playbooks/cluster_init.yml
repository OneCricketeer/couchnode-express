---
# File: cluster_init.yml
# Example Ansible playbook to initialize a new Couchbase Server cluster

- hosts: couchbase_cluster
  sudo: True
  gather_facts: False
  tasks:
    - name: Create cluster grouping
      group_by: key={{ couchbase_server_node_role }}

- hosts: primary
  sudo: True
  serial: 1
  gather_facts: False
  vars:
    couchbase_server_primary_node: "{{hostvars[groups['primary'][0]]['ansible_fqdn']}}"
  tasks:
    - name: Get major version
      shell: cat /opt/couchbase/VERSION.txt | cut -d '.' -f1
      register: cb_major_version

    - name: Configure cluster settings
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ ansible_fqdn }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-init-username={{ couchbase_server_admin }} --cluster-init-password={{ couchbase_server_password }} --cluster-init-port={{couchbase_server_admin_port}} --cluster-init-ramsize={{ couchbase_server_ram }}"
      register: couchbase_config
      # ignore_errors: True

    - name: Initialize primary node
      shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli node-init -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-init-username={{ couchbase_server_admin }} --node-init-hostname={{ ansible_fqdn }}"
      when: "{{ cb_major_version['stdout'] }} != 2"


- hosts: additional
  sudo: True
  serial: 1
  gather_facts: False
  tasks:

  - name: Get major version
    shell: cat /opt/couchbase/VERSION.txt | cut -d '.' -f1
    register: cb_major_version

  - name: Configure cluster settings
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli cluster-init -c {{ ansible_fqdn }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-init-username={{ couchbase_server_admin }} --cluster-init-password={{ couchbase_server_password }} --cluster-init-port={{couchbase_server_admin_port}} --cluster-init-ramsize={{ couchbase_server_ram }}"

  - name: Initialize additional node
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli node-init -c {{ ansible_fqdn }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --cluster-init-username={{ couchbase_server_admin }} --node-init-hostname={{ ansible_fqdn }}"
    when: "{{ cb_major_version['stdout'] }} != 2"


- hosts: primary
  sudo: True
  serial: 1
  gather_facts: False
  vars:
    couchbase_server_primary_node: "{{hostvars[groups['primary'][0]]['ansible_fqdn']}}"
  tasks:

  - name: Create cluster grouping
    group_by: key={{ couchbase_server_node_role }}

  - name: Get major version
    shell: cat /opt/couchbase/VERSION.txt | cut -d '.' -f1
    register: cb_major_version

  # - name: Display all variables/facts known for a host
  #   debug: var=hostvars[[item][0]]
  #   with_items: groups['additional']

  - name: Join additional cluster nodes
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli server-add -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }} --server-add={{hostvars[[item][0]]['ansible_fqdn']}}:{{ couchbase_server_admin_port }} --server-add-username={{ couchbase_server_admin }} --server-add-password={{ couchbase_server_password }}"
    with_items: groups['additional']

  - name: Rebalance cluster
    shell: "{{ couchbase_server_home_path }}/bin/couchbase-cli rebalance -c {{ couchbase_server_primary_node }}:{{ couchbase_server_admin_port }} --user={{ couchbase_server_admin }} --password={{ couchbase_server_password }}"
